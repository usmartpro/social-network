networks:
  localnet:
    driver: bridge

services:

  postgres:
    image: postgres:17.4
    container_name: social-pg
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d social'" ]
      interval: 5s
      timeout: 3s
      retries: 3
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=social
    volumes:
      - ../../postgres/data:/var/lib/postgresql/data
      - ../migrations/initdb:/docker-entrypoint-initdb.d
    networks:
      - localnet

  migrations:
    container_name: social-migrations
    build:
      context: .
      dockerfile: ./build/migrations/Dockerfile
    depends_on:
      - postgres
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: "postgresql://postgres:postgres@postgres:5432/social?sslmode=disable"
    command: [ "/bin/sh", "-c", "net-wait-go -addrs postgres:5432 && sleep 5 && /bin/goose up" ]
    networks:
      - localnet

  redis:
    image: redis:latest
    container_name: social-redis
    environment:
      - REDIS_PASSWORD=social
      - REDIS_USER=social
      - REDIS_USER_PASSWORD=social
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "requirepass social" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
        echo "user social on >social ~* +@all" >> /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "social", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 3
    restart: always
    tty: true
    stdin_open: true
    networks:
      - localnet

  social:
    container_name: social-app
    build:
      context: .
      dockerfile: ./build/app/Dockerfile
    restart: always
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

    ports:
      - 8000:8000
    #command: dockerize -wait tcp://postgres:5432
    #entrypoint: "./wait-for-it.sh postgres:5432"
    environment:
            LOG_LEVEL: "info"
            LOG_FILENAME: "stderr"
            STORAGE_TYPE: "base"
            STORAGE_DSN: "postgresql://postgres:postgres@postgres:5432/social?sslmode=disable"
            HTTP_HOST: ""
            HTTP_PORT: "8000"
            CACHE_DSN: "redis://social:social@redis:6379/0"
    networks:
      - localnet

 # tests:
    #   container_name: social-tests
      #build:
      #context: .
      #dockerfile: ./build/tests/Dockerfile
      #ports:
      #- 8000:8000
      #volumes:
      #- ../logs/tests:/var/logs
      #networks:
      #- localnet
