networks:
  localnet:
    driver: bridge

services:

  postgres:
    image: postgres:17.4
    container_name: social-pg
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d social'" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=social
    volumes:
      - ../../postgres/data:/var/lib/postgresql/data
      - ../migrations/initdb:/docker-entrypoint-initdb.d
    networks:
      - localnet

  migrations:
    container_name: social-migrations
    build:
      context: .
      dockerfile: ./build/migrations/Dockerfile
    depends_on:
      - postgres
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: "postgresql://postgres:postgres@postgres:5432/social?sslmode=disable"
    command: [ "/bin/sh", "-c", "net-wait-go -addrs postgres:5432 && sleep 5 && /bin/goose up" ]
    networks:
      - localnet

  social:
    container_name: social-app
    build:
      context: .
      dockerfile: ./build/app/Dockerfile
    restart: always
    depends_on:
      postgres:
          condition: service_healthy

    ports:
      - 8000:8000
    #command: dockerize -wait tcp://postgres:5432
    #entrypoint: "./wait-for-it.sh postgres:5432"
    environment:
            LOG_LEVEL: "info"
            LOG_FILENAME: "stderr"
            STORAGE_TYPE: "base"
            STORAGE_DSN: "postgresql://postgres:postgres@postgres:5432/social?sslmode=disable"
            HTTP_HOST: "127.0.0.1"
            HTTP_PORT: "8000"
    networks:
      - localnet

 # tests:
    #   container_name: social-tests
      #build:
      #context: .
      #dockerfile: ./build/tests/Dockerfile
      #ports:
      #- 8000:8000
      #volumes:
      #- ../logs/tests:/var/logs
      #networks:
      #- localnet
